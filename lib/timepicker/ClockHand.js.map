{"version":3,"sources":["timepicker/ClockHand.js"],"names":["cx","TimePickerClockHand","getStyle","props","time","mode","number","single","deg","reduce","result","prefix","render","className","addVariants","minute","build","getPartClassName","displayName","propTypes","instanceOf","Date","isRequired","oneOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAUA,QAAMA,KAAK,uBAAO,qBAAP,CAAX;;AAEA;;;;;;;QAMqBC,mB;;;;;;;;sCAOjBC,Q,uBAAW;AAAA,yBAKH,KAAKC,KALF;AAAA,gBAGHC,IAHG,UAGHA,IAHG;AAAA,gBAIHC,IAJG,UAIHA,IAJG;;;AAOP,gBAAIC,SAAS,yBAAOF,IAAP,EAAaC,IAAb,GAAb;AACA,gBAAME,SAASF,SAAS,QAAT,GAAoB,CAApB,GAAwB,EAAvC;AACA,gBAAMG,MAAM,CAAC,MAAMD,SAASD,MAAhB,IAA0B,GAAtC;;AAEA,mBAAO,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,EAAxB,EACFG,MADE,CACK,UAACC,MAAD,EAASC,MAAT,EAAoB;AAAA;;AAExB,mDACOD,MADP,0DAEQC,MAFR,IAEiBA,SAAS,GAAT,GAAe,GAFhC,iDAE6EH,GAF7E;AAKH,aARE,EAQA,EARA,CAAP;AAUH,S;;sCAQDI,M,qBAAS;AAAA,0BAKD,KAAKT,KALJ;AAAA,gBAGDC,IAHC,WAGDA,IAHC;AAAA,gBAIDC,IAJC,WAIDA,IAJC;;;AAOL,gBAAMQ,YAAYb,GAAG,KAAKG,KAAR,EACbW,WADa,CACDT,SAAS,QAAT,IAAqB,yBAAOD,IAAP,EAAaW,MAAb,KAAwB,CAAxB,KAA8B,CAAnD,GAAuD,KAAvD,GAA+D,IAD9D,EAEbC,KAFa,EAAlB;;AAIA,mBACI;AAAA;AAAA,kBAAK,WAAWH,SAAhB,EAA2B,OAAO,KAAKX,QAAL,EAAlC;AACI,0DAAK,WAAWF,GAAGiB,gBAAH,CAAoB,KAApB,CAAhB;AADJ,aADJ;AAKH,S;;;;;yBApDgBhB,mB;;;AAwDrBA,wBAAoBiB,WAApB,GAAkC,qBAAlC;;AAEAjB,wBAAoBkB,SAApB,GAAgC;AAC5Bf,cAAM,iBAAUgB,UAAV,CAAqBC,IAArB,EAA2BC,UADL;AAE5BjB,cAAM,iBAAUkB,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,EAAoCD;AAFd,KAAhC","file":"ClockHand.js","sourcesContent":["/**\n * @file melon/TimePickerClockHand\n * @author cxtom(cxtom2008@qq.com)\n */\n\nimport React, {PropTypes, Component} from 'react';\nimport moment from 'moment';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('TimePickerClockHand');\n\n/**\n * melon/TimePickerClockHand\n *\n * @extends {React.Component}\n * @class\n */\nexport default class TimePickerClockHand extends Component {\n\n    /**\n     * 返回指针的样式\n     *\n     * @return {Object}  样式\n     */\n    getStyle() {\n\n        const {\n            time,\n            mode\n        } = this.props;\n\n        let number = moment(time)[mode]();\n        const single = mode === 'minute' ? 6 : 30;\n        const deg = (180 + single * number) % 360;\n\n        return ['Webkit', 'Moz', 'ms', '']\n            .reduce((result, prefix) => {\n\n                return {\n                    ...result,\n                    [`${prefix}${prefix ? 'T' : 't'}ransform`]: `translate(-50%, 0) rotate(${deg}deg)`\n                };\n\n            }, {});\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {\n            time,\n            mode\n        } = this.props;\n\n        const className = cx(this.props)\n            .addVariants(mode === 'minute' && moment(time).minute() % 5 !== 0 ? 'end' : null)\n            .build();\n\n        return (\n            <div className={className} style={this.getStyle()}>\n                <div className={cx.getPartClassName('end')} />\n            </div>\n        );\n    }\n\n}\n\nTimePickerClockHand.displayName = 'TimePickerClockHand';\n\nTimePickerClockHand.propTypes = {\n    time: PropTypes.instanceOf(Date).isRequired,\n    mode: PropTypes.oneOf(['hour', 'minute']).isRequired\n};\n"]}