{"version":3,"sources":["timepicker/Header.js"],"names":["cx","TimePickerHeader","render","props","time","mode","timeMoment","selected","hour","isAfternoon","build","getPartClassName","onModeChange","part","addStates","format","onChange","subtract","toDate","isModeChange","add","displayName","defaultProps","millisecond","seconds","propTypes","instanceOf","Date","oneOf","func"],"mappings":"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","file":"Header.js","sourcesContent":["/**\n * @file melon/TimePickerHeader\n * @author cxtom(cxtom2008@qq.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport moment from 'moment';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('TimePickerHeader');\n\n/**\n * melon/TimePickerHeader\n *\n * @extends {React.Component}\n * @class\n */\nexport default class TimePickerHeader extends Component {\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n\n        const {time, mode} = props;\n        const timeMoment = moment(time);\n\n        const selected = mode === 'hour';\n\n        let hour = moment(time).hour();\n        let isAfternoon = false;\n\n        if (hour > 12 || hour === 0) {\n            hour = hour === 0 ? 12 : (hour - 12);\n            isAfternoon = true;\n        }\n\n        return (\n            <div className={cx(props).build()}>\n                <div className={cx.getPartClassName('time')}>\n                    <span\n                        onClick={selected && props.onModeChange ? null : () => {\n                            props.onModeChange({mode: 'hour'});\n                        }}\n                        className={cx().part('time-hour').addStates({selected}).build()}>\n                        {moment(hour + '', 'h').format('hh')}\n                    </span>\n                    <span>:</span>\n                    <span\n                        onClick={!selected && props.onModeChange ? null : () => {\n                            props.onModeChange({mode: 'minute'});\n                        }}\n                        className={cx().part('time-minute').addStates({selected: !selected}).build()}>\n                        {timeMoment.format('mm')}\n                    </span>\n                </div>\n                <div className={cx.getPartClassName('apm')}>\n                    <span\n                        onClick={!isAfternoon && props.onChange ? null : () => {\n                            props.onChange({time: moment(time).subtract(12, 'h').toDate(), isModeChange: false});\n                        }}\n                        className={cx().part('apm-am').addStates({selected: !isAfternoon}).build()}>\n                        AM\n                    </span>\n                    <span\n                        onClick={isAfternoon && props.onChange ? null : () => {\n                            props.onChange({time: moment(time).add(12, 'h').toDate(), isModeChange: false});\n                        }}\n                        className={cx().part('apm-pm').addStates({selected: isAfternoon}).build()}>\n                        PM\n                    </span>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nTimePickerHeader.displayName = 'TimePickerHeader';\n\nTimePickerHeader.defaultProps = {\n    time: moment().millisecond(0).seconds(0).toDate(),\n    mode: 'hour'\n};\n\nTimePickerHeader.propTypes = {\n    time: PropTypes.instanceOf(Date),\n    mode: PropTypes.oneOf(['hour', 'minute']),\n    onModeChange: PropTypes.func\n};\n"]}