{"version":3,"sources":["TimePicker.js"],"names":["cx","TimePicker","props","context","defaultValue","value","onLabelClick","bind","onConfirm","onCancel","onTimeChange","time","state","stringifyValue","parseValue","open","timeFormat","format","date","toDate","setState","onFocus","type","target","onBlur","valueMoment","timeMoment","get","onChange","renderHiddenInput","name","render","disabled","readOnly","placeholder","labelFormat","others","begin","end","className","addStates","focus","getStyleStates","build","getPartClassName","displayName","defaultProps","propTypes","string","labalFormat","oneOfType","object","childContextTypes","contextTypes"],"mappings":"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","file":"TimePicker.js","sourcesContent":["/**\n * @file melon/TimePicker\n * @author cxtom <cxtom2008@gmail.com>\n */\n\nimport React, {PropTypes} from 'react';\nimport moment from 'moment';\n\nimport InputComponent from 'melon-core/InputComponent';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nimport Icon  from 'melon/Icon';\nimport Confirm from 'melon/Confirm';\nimport Panel from './timepicker/Panel';\n\nimport omit from 'lodash/omit';\n\nconst cx = create('TimePicker');\n\n/**\n * melon/TimePicker\n *\n * @extends {React.Component}\n * @class\n */\nexport default class TimePicker extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param {*} props 属性\n     * @param {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        const {defaultValue, value} = props;\n\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n\n        const time = value === void 0 ? defaultValue : value;\n\n        /**\n         * 初始状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n\n            ...this.state,\n\n            value: this.stringifyValue(time),\n\n            // 缓存用户在 confirm 前的选中值\n            time: time ? this.parseValue(time) : void 0,\n\n            // 是否打开选择窗\n            open: false\n        };\n\n    }\n\n    /**\n     * 格式化日期\n     *\n     * @param {Date} time 源日期对象\n     * @return {string} 格式化后的日期字符串\n     * @public\n     */\n    stringifyValue(time) {\n\n        if (typeof time === 'string' || time == null) {\n            return time;\n        }\n\n        const timeFormat = this.props.timeFormat;\n\n        return moment(time).format(timeFormat);\n    }\n\n    /**\n     * 格式化日期对象\n     *\n     * @param  {string} date 日期字符串\n     * @return {Date}        转化后的日期对象\n     * @public\n     */\n    parseValue(date) {\n\n        if (typeof date !== 'string') {\n            return date;\n        }\n\n        return moment(date, this.props.timeFormat).toDate();\n    }\n\n\n    /**\n     * 点击 label\n     *\n     * @protected\n     */\n    onLabelClick() {\n\n        this.setState({open: true});\n\n        const onFocus = this.props.onFocus;\n\n        if (onFocus)  {\n            onFocus({\n                type: 'focus',\n                target: this\n            });\n        }\n    }\n\n    /**\n     * 失去焦点时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onBlur() {\n\n        const onBlur = this.props.onBlur;\n\n        if (onBlur)  {\n            onBlur({\n                type: 'blur',\n                target: this\n            });\n        }\n\n    }\n\n    /**\n     * TimePicker Dialog上点击确定按钮触发\n     *\n     * @protected\n     */\n    onConfirm() {\n\n        let {value, time} = this.state;\n\n        value = this.parseValue(value);\n\n        const valueMoment = moment(value, this.timeFormat);\n        const timeMoment = moment(time);\n\n        if (value !== '' && valueMoment.get('hour') === timeMoment.get('hour')\n            && valueMoment.get('minute') === timeMoment.get('minute')) {\n            this.setState({open: false});\n        }\n\n        this.setState({open: false}, () => {\n\n            super.onChange({\n                type: 'change',\n                target: this,\n                value: this.stringifyValue(time)\n            });\n\n        });\n\n        this.onBlur();\n\n    }\n\n    /**\n     * TimePicker Dialog上点击取消按钮触发\n     *\n     * @protected\n     */\n    onCancel() {\n        this.setState({open: false});\n        this.onBlur();\n    }\n\n\n    /**\n     * onTimeChange - description\n     *\n     * @param  {Object} param 事件对象\n     * @param  {Date} param.time 改变的时间\n     */\n    onTimeChange({time}) {\n        this.setState({time});\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {\n            state,\n            props\n        } = this;\n\n        const {\n            disabled,\n            readOnly,\n            placeholder,\n            timeFormat,\n            labelFormat,\n            ...others\n        } = props;\n\n        let {begin, end} = props;\n\n        begin = begin ? this.parseValue(begin) : null;\n        end = end ? this.parseValue(end) : null;\n\n        const {value, open} = state;\n\n        const className = cx(props)\n            .addStates({focus: open})\n            .addStates(this.getStyleStates())\n            .build();\n\n        return (\n            <div {...omit(others, ['name'])} className={className}>\n                {this.renderHiddenInput()}\n                <label\n                    onClick={(disabled || readOnly) ? null : this.onLabelClick}\n                    className={cx.getPartClassName('label')}>\n                    {value ? moment(value, timeFormat).format(labelFormat) : (\n                        <span className={cx.getPartClassName('label-placeholder')}>\n                            {placeholder}\n                        </span>\n                    )}\n                    <Icon icon='expand-more' />\n                </label>\n                <Confirm\n                    open={open}\n                    variants={['timepicker']}\n                    onConfirm={this.onConfirm}\n                    onCancel={this.onCancel}\n                    width=\"adaptive\"\n                    buttonVariants={['secondery', 'timepicker']} >\n                    <Panel\n                        time={this.state.time}\n                        begin={begin}\n                        end={end}\n                        format={timeFormat}\n                        onChange={this.onTimeChange} />\n                </Confirm>\n            </div>\n        );\n\n    }\n}\n\nTimePicker.displayName = 'TimePicker';\n\nTimePicker.defaultProps = {\n    ...InputComponent.defaultProps,\n    timeFormat: 'HH:mm:ss',\n    labelFormat: 'HH:mm',\n    placeholder: '请选择'\n};\n\nTimePicker.propTypes = {\n    ...InputComponent.propTypes,\n    placeholder: PropTypes.string,\n    timeFormat: PropTypes.string,\n    labalFormat: PropTypes.string,\n    end: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]),\n    begin: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ])\n};\n\nTimePicker.childContextTypes = InputComponent.childContextTypes;\nTimePicker.contextTypes = InputComponent.contextTypes;\n"]}