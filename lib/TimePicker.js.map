{"version":3,"sources":["TimePicker.js"],"names":["cx","TimePicker","props","context","value","state","onLabelClick","bind","onConfirm","onCancel","onTimeChange","time","parseValue","open","stringifyValue","timeFormat","format","date","toDate","e","disabled","readOnly","setState","valueMoment","timeMoment","get","onChange","type","target","renderHiddenInput","name","render","placeholder","labelFormat","others","begin","end","className","addStates","focus","getStyleStates","build","getPartClassName","onFocus","onBlur","displayName","defaultProps","propTypes","string","labalFormat","oneOfType","object","childContextTypes","contextTypes"],"mappings":"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","file":"TimePicker.js","sourcesContent":["/**\n * @file melon/TimePicker\n * @author cxtom <cxtom2008@gmail.com>\n */\n\nimport React, {PropTypes} from 'react';\nimport moment from 'moment';\n\nimport InputComponent from 'melon-core/InputComponent';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nimport Icon  from 'melon/Icon';\nimport Confirm from 'melon/Confirm';\nimport Panel from './timepicker/Panel';\n\nimport omit from 'lodash/omit';\n\nconst cx = create('TimePicker');\n\n/**\n * melon/TimePicker\n *\n * @extends {React.Component}\n * @class\n */\nexport default class TimePicker extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param {*} props 属性\n     * @param {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        const value = this.state.value;\n\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n\n        this.state = {\n\n            ...this.state,\n\n            // 缓存用户在 confirm 前的选中值\n            time: value ? this.parseValue(value) : void 0,\n\n            // 是否打开选择窗\n            open: false\n        };\n\n    }\n\n    /**\n     * 格式化日期\n     *\n     * @param {Date} time 源日期对象\n     * @param {string=} format 日期格式，默认为当前实例的timeFormat\n     * @return {string} 格式化后的日期字符串\n     * @private\n     */\n    stringifyValue(time) {\n\n        if (typeof time === 'string') {\n            return time;\n        }\n\n        const timeFormat = this.props.timeFormat;\n\n        return moment(time).format(timeFormat);\n    }\n\n    /**\n     * 格式化日期对象\n     *\n     * @param  {string} date 日期字符串\n     * @return {Date}        转化后的日期对象\n     * @private\n     */\n    parseValue(date) {\n\n        if (typeof date !== 'string') {\n            return date;\n        }\n\n        return moment(date, this.props.timeFormat).toDate();\n    }\n\n\n    onLabelClick(e) {\n\n        const {disabled, readOnly} = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        this.setState({open: true});\n\n    }\n\n    /**\n     * rawValue 在 TimePicker Dialog上点击确定或取消按钮触发\n     *\n     * @private\n     */\n    onConfirm() {\n\n        let {value, time} = this.state;\n\n        value = this.parseValue(value);\n\n        const valueMoment = moment(value, this.timeFormat);\n        const timeMoment = moment(time);\n\n        if (value !== '' && valueMoment.get('hour') === timeMoment.get('hour')\n            && valueMoment.get('minute') === timeMoment.get('minute')) {\n            this.setState({open: false});\n        }\n\n        this.setState({open: false}, () => {\n\n            super.onChange({\n                type: 'change',\n                target: this,\n                value: this.stringifyValue(time)\n            });\n\n        });\n\n    }\n\n    onCancel() {\n        this.setState({open: false});\n    }\n\n    onTimeChange({time}) {\n        this.setState({time});\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    render() {\n\n        const {\n            state,\n            props\n        } = this;\n\n        const {\n            disabled,\n            readOnly,\n            placeholder,\n            timeFormat,\n            labelFormat,\n            ...others\n        } = props;\n\n        let {begin, end} = props;\n\n        begin = begin ? this.parseValue(begin) : null;\n        end = end ? this.parseValue(end) : null;\n\n        const {value, open} = state;\n\n        const className = cx(props)\n            .addStates({focus: open})\n            .addStates(this.getStyleStates())\n            .build();\n\n        return (\n            <div {...omit(others, ['name'])} className={className}>\n                {this.renderHiddenInput()}\n                <label\n                    onClick={(disabled || readOnly) ? null : this.onLabelClick}\n                    className={cx.getPartClassName('label')}>\n                    {value ? moment(value, timeFormat).format(labelFormat) : (\n                        <span className={cx.getPartClassName('label-placeholder')}>\n                            {placeholder}\n                        </span>\n                    )}\n                    <Icon icon='expand-more' />\n                </label>\n                <Confirm\n                    open={this.state.open}\n                    variants={['timepicker']}\n                    onConfirm={this.onConfirm}\n                    onCancel={this.onCancel}\n                    onShow={this.props.onFocus}\n                    onHide={this.props.onBlur}\n                    width=\"adaptive\"\n                    buttonVariants={['secondery', 'timepicker']} >\n                    <Panel\n                        time={this.state.time}\n                        begin={begin}\n                        end={end}\n                        format={timeFormat}\n                        onChange={this.onTimeChange} />\n                </Confirm>\n            </div>\n        );\n\n    }\n}\n\nTimePicker.displayName = 'TimePicker';\n\nTimePicker.defaultProps = {\n    ...InputComponent.defaultProps,\n    timeFormat: 'HH:mm:ss',\n    labelFormat: 'HH:mm',\n    placeholder: '请选择'\n};\n\nTimePicker.propTypes = {\n    ...InputComponent.propTypes,\n    placeholder: PropTypes.string,\n    timeFormat: PropTypes.string,\n    labalFormat: PropTypes.string,\n    end: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]),\n    begin: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ])\n};\n\nTimePicker.childContextTypes = InputComponent.childContextTypes;\nTimePicker.contextTypes = InputComponent.contextTypes;\n"]}